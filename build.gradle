plugins {
  id "groovy"
  id "osgi"
  id "maven"
  id "maven-publish"
  id "signing"
}

repositories {
  maven { url uri('/tmp/repo') }
  mavenLocal()
  mavenCentral()
  maven { url "http://maven.restlet.org" }
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile (
      [group: 'net.sf.saxon', name: 'Saxon-HE', version: saxonVersion],
      [group: 'com.xmlcalabash', name: 'xmlcalabash', version: xmlCalabashVersion]
    )

    testCompile (
      [group: 'com.xmlcalabash', name: 'xmlcalabash', version: xmlCalabashVersion],
      [group: 'junit', name: 'junit', version: '4.12']
    )
}

// Variables
project.ext.releaseVersion = version
project.ext.distVersion = version + snapshot

version = project.ext.distVersion // - gets turned into . in some contexts

task groovydocJar(type: Jar, dependsOn: groovydoc) {
  classifier = 'javadoc'
  from groovydoc.destinationDir
}

jar {
  manifest {
    instruction 'Built-By', builtBy
    instruction 'Implementation-Vendor', 'Norman Walsh'
    instruction 'Implementation-Title', 'XML Calabash Gradle Tasks'
    instruction 'Implementation-Version', distVersion
    instruction 'Bundle-SymbolicName', 'com.xmlcalabash.XMLCalabashPlugin'
    instruction 'Bundle-RequiredExecutionEnvironment', 'J2SE-1.7'
    instruction 'Export-Package', '*, etc'
  }
}

task copyStuff(type: Copy) {
  from 'README.adoc'
  from 'LICENSE.md'
  into 'build/dist'
}
jar.dependsOn copyStuff

task javadocJar(type: Jar, dependsOn: javadoc) {
    from tasks.javadoc.destinationDir
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task copyJar(dependsOn: jar, type: Copy) {
  from "build/libs/xmlcalabash1-gradle-" + distVersion + ".jar"
  into "build/dist"
}

task copyJavaDoc(dependsOn: javadoc, type: Copy) {
  from "build/docs"
  into "build/dist/docs"
}

task makeDist(dependsOn: [build, copyJar]) {
    // nop
}
makeDist.doLast {
    println "Created distribution in build/dist"
}

task zipDist(dependsOn: makeDist, type: Zip) {
  from('build/dist')
  into 'xmlcalabash1-gradle-' + distVersion
  archiveName 'xmlcalabash1-gradle-' + distVersion + ".zip"
}

task dist(dependsOn: [zipDist]) {
  // nop
}


artifacts {
  archives jar
  archives sourcesJar
  archives groovydocJar
}

signing {
  required { gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId group
      artifactId 'xmlcalabash1-gradle'
      version version
      from components.java
    }
  }
  repositories {
    maven {
      url 'file:///tmp/repo'
    }
  }
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment ->
        signing.signPom(deployment)
      }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }

      pom.project {
        name 'XML Calabash Gradle Plugin'
        packaging 'jar'
        description 'A Gradle Plugin for XML Calabash 1.x'
        url 'https://github.com/ndw/xmlcalabash1-gradle'

        scm {
          url 'scm:git@github.com:ndw/xmlcalabash1-gradle.git'
          connection 'scm:git@github.com:ndw/xmlcalabash1-gradle.git'
          developerConnection 'scm:git@github.com:ndw/xmlcalabash1-gradle.git'
        }

        licenses {
          license {
            name 'Common Development and Distribution License (CDDL) version 1.0'
            url 'http://www.opensource.org/licenses/cddl1.txt'
            distribution 'repo'
          }
          license {
            name 'GNU General Public License version 2'
            url 'http://www.gnu.org/licenses/gpl-2.0.txt'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id 'ndw'
            name 'Norman Walsh'
          }
        }
      }
    }
  }
}

